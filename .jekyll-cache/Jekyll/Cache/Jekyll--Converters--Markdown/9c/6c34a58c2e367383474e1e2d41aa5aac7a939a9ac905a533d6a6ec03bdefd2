I">*<h4 id="枚举宏">枚举、宏</h4>

<h5 id="pragma-mark-1-创建普通的枚举类型"><code class="highlighter-rouge">#</code>pragma mark 1 创建普通的枚举类型</h5>
<div class="language-obj-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="cp">#include 
</span><span class="kt">int</span> <span class="nf">enumOne</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">enum</span> <span class="n">Season</span> <span class="p">{</span><span class="n">spring</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">summer</span><span class="p">,</span><span class="n">autumn</span><span class="p">,</span><span class="n">winter</span><span class="p">};</span>
    <span class="k">enum</span> <span class="n">Season</span> <span class="n">s</span> <span class="o">=</span> <span class="n">summer</span><span class="p">;</span><span class="c1">//或者：s=2;</span>
    <span class="k">return</span> <span class="n">s</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="pragma-mark-2-模拟ios中label的文本对齐方式"><code class="highlighter-rouge">#</code>pragma mark 2 模拟ios中label的文本对齐方式</h5>
<div class="language-obj-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="kt">void</span> <span class="nf">textAligment</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">enum</span> <span class="n">NSTextAligment</span> <span class="p">{</span><span class="n">NSTextAligmentLeft</span><span class="p">,</span><span class="n">NSTextAligmentCenter</span><span class="p">,</span><span class="n">NSTextAligmentRight</span><span class="p">}</span> <span class="n">al</span><span class="o">=</span><span class="n">NSTextAligmentRight</span><span class="p">;</span>
    <span class="k">struct</span> <span class="n">UILabel</span> <span class="p">{</span>
        <span class="kt">float</span> <span class="n">frame</span><span class="p">;</span>
        <span class="k">enum</span> <span class="n">NSTextAligment</span> <span class="n">aligment</span><span class="p">;</span>
    <span class="p">};</span>
    <span class="k">struct</span> <span class="n">UILabel</span> <span class="n">label1</span><span class="o">=</span><span class="p">{</span><span class="mi">100</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">};</span>
    <span class="k">struct</span> <span class="n">UILabel</span> <span class="n">label2</span><span class="o">=</span><span class="p">{</span><span class="mi">200</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span><span class="n">al</span><span class="p">};</span>
    <span class="k">struct</span> <span class="n">UILabel</span> <span class="n">label3</span><span class="o">=</span><span class="p">{</span><span class="mi">130</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">};</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">%d-%d-%d"</span><span class="p">,</span><span class="n">label1</span><span class="p">.</span><span class="n">aligment</span><span class="p">,</span><span class="n">label2</span><span class="p">.</span><span class="n">aligment</span><span class="p">,</span><span class="n">label3</span><span class="p">.</span><span class="n">aligment</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="pragma-mark-宏替换"><code class="highlighter-rouge">#</code>pragma mark 宏替换</h5>
<div class="language-obj-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kt">void</span> <span class="nf">typedefOne</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">typedef</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">Integer</span><span class="p">;</span><span class="c1">//给数据类型long int起一个别名</span>
    <span class="k">typedef</span> <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">int</span> <span class="n">UInteger</span><span class="p">;</span><span class="c1">//给数据类型unsigned long int起一个别名</span>
<span class="cp">#define Integer1 int//原封不动的替换:Integer1替换int
</span>    <span class="n">Integer</span> <span class="n">a</span><span class="p">;</span>
    <span class="n">Integer1</span> <span class="n">a1</span><span class="p">;</span>
   
    <span class="k">typedef</span> <span class="kt">char</span><span class="o">*</span> <span class="n">String</span><span class="p">;</span>
<span class="cp">#define String1 char *//原封不动的替换
</span>   
    <span class="n">String</span> <span class="n">name</span><span class="p">,</span><span class="n">address</span><span class="p">;</span>        <span class="c1">//char *name,char *address</span>
    <span class="n">String1</span> <span class="n">name1</span><span class="p">,</span><span class="n">address1</span><span class="p">;</span>      <span class="c1">//char *name1,char address1;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="pragma-mark-宏替换结构体"><code class="highlighter-rouge">#</code>pragma mark 宏替换结构体</h5>
<div class="language-obj-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="kt">void</span> <span class="nf">typedefTwo</span><span class="p">()</span>
<span class="p">{</span>
   
    <span class="k">typedef</span> <span class="k">struct</span>
         <span class="p">{</span>
          <span class="kt">int</span> <span class="n">age</span><span class="p">;</span>
          <span class="kt">float</span> <span class="n">height</span><span class="p">;</span>
         <span class="p">}</span> <span class="n">AAA</span><span class="p">;</span>
    <span class="n">AAA</span> <span class="n">xiaoli</span><span class="o">=</span><span class="p">{</span><span class="mi">23</span><span class="p">,</span><span class="mi">176</span><span class="p">.</span><span class="mi">5</span><span class="p">};</span>
    <span class="n">AAA</span> <span class="n">xiaozhang</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="pragma-mark-宏替换枚举"><code class="highlighter-rouge">#</code>pragma mark 宏替换枚举</h5>
<div class="language-obj-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
</pre></td><td class="rouge-code"><pre><span class="kt">void</span> <span class="nf">typedefThree</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">typedef</span> <span class="k">enum</span><span class="p">{</span><span class="n">spring</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">summer</span><span class="p">,</span><span class="n">autumn</span><span class="p">,</span><span class="n">winter</span><span class="p">}</span> <span class="n">Season</span><span class="p">;</span>
    <span class="n">Season</span> <span class="n">s1</span><span class="o">=</span><span class="n">summer</span><span class="p">;</span>
    <span class="n">Season</span> <span class="n">s2</span><span class="o">=</span><span class="n">winter</span><span class="p">;</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">" %d %d"</span><span class="p">,</span><span class="n">s1</span><span class="p">,</span><span class="n">s2</span><span class="p">);</span><span class="c1">//结果  2   4；</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
    <span class="n">textAligment</span><span class="p">();</span>
    <span class="c1">//枚举</span>
    <span class="kt">int</span> <span class="n">season</span><span class="o">=</span><span class="n">enumOne</span><span class="p">();</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">season</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"spring"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
           
        <span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"summer"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
           
        <span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"autumn"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
           
        <span class="k">case</span> <span class="mi">4</span><span class="p">:</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"winter"</span><span class="p">);</span>
            <span class="k">break</span><span class="p">;</span>
           
        <span class="nl">default:</span>
            <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET