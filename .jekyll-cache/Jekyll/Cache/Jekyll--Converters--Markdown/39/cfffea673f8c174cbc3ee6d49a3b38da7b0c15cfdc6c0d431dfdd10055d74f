I"w<h5 id="viewwillappear"><code class="highlighter-rouge">viewWillAppear:</code></h5>

<p><code class="highlighter-rouge">Called when the view is about to made visible. Default does nothing</code>视图即将可见时调用。默认情况下不执行任何操作</p>

<h5 id="viewdidappear"><code class="highlighter-rouge">viewDidAppear:</code></h5>

<p><code class="highlighter-rouge">Called when the view has been fully transitioned onto the screen. Default does nothing</code>视图已完全过渡到屏幕上时调用</p>

<h5 id="viewwilldisappear"><code class="highlighter-rouge">viewWillDisappear:</code></h5>

<p><code class="highlighter-rouge">Called when the view is dismissed, covered or otherwise hidden. Default does nothing</code>视图被驳回时调用，覆盖或以其他方式隐藏。默认情况下不执行任何操作</p>

<h5 id="viewdiddisappear"><code class="highlighter-rouge">viewDidDisappear:</code></h5>

<p><code class="highlighter-rouge">Called after the view was dismissed, covered or otherwise hidden. Default does nothing</code>视图被驳回后调用，覆盖或以其他方式隐藏。默认情况下不执行任何操作<code class="highlighter-rouge">loadView</code>; <code class="highlighter-rouge">This is where subclasses should create their custom view hierarchy if they aren't using a nib. Should never be called directly.</code>这是当他们没有正在使用nib视图页面，子类将会创建自己的自定义视图层。绝不能直接调用。</p>

<h5 id="viewdidload"><code class="highlighter-rouge">viewDidLoad:</code></h5>

<p><code class="highlighter-rouge">Called after the view has been loaded. For view controllers created in code, this is after -loadView. For view controllers unarchived from a nib, this is after the view is set.</code>
在视图加载后被调用，如果是在代码中创建的视图加载器，他将会在<code class="highlighter-rouge">loadView</code>方法后被调用，如果是从<code class="highlighter-rouge">nib</code>视图页面输出，他将会在视图设置好后后被调用。</p>

<h5 id="initwithnibname-bundle"><code class="highlighter-rouge">initWithNibName: bundle:</code></h5>

<p>载入<code class="highlighter-rouge">nib</code>档案来初始化<code class="highlighter-rouge">loadView</code>载入视图<code class="highlighter-rouge">viewDidLoad</code>在载入视图至内存后会呼叫的方法<code class="highlighter-rouge">viewDidUnload</code>在视图从内存中释放后会呼叫的方法 (当内存过低，释放一些不需要的视图时调用)<br />
<code class="highlighter-rouge">viewWillAppear</code>当收到视图在视窗将可见时的通知会呼叫的方法<br />
<code class="highlighter-rouge">viewDidAppear</code>当收到视图在视窗已可见时的通知会呼叫的方法<br />
<code class="highlighter-rouge">viewWillDisappear</code>当收到视图将去除、被覆盖或隐藏于视窗时的通知会呼叫的方法<br />
<code class="highlighter-rouge">viewDidDisappear</code>当收到视图已去除、被覆盖或隐藏于视窗时的通知会呼叫的方法<br />
<code class="highlighter-rouge">didReceiveMemoryWarning</code>收到系统传来的内存警告通知后会执行的方法<br />
<code class="highlighter-rouge">shouldAutorotateToInterfaceOrientation</code>是否支持不同方向的旋转视图<br />
<code class="highlighter-rouge">willAnimateRotationToInterfaceOrientation</code>在进行旋转视图前的会执行的方法（用于调整旋转视图之用）</p>

<p>当一个视图控制器被创建，并在屏幕上显示的时候。 代码的执行顺序</p>

<p>1、<code class="highlighter-rouge">alloc</code> 创建对象，分配空间<br />
2、<code class="highlighter-rouge">init</code> (<code class="highlighter-rouge">initWithNibName</code>) 初始化对象，初始化数据<br />
3、<code class="highlighter-rouge">loadView</code> 从<code class="highlighter-rouge">nib</code>载入视图 ，通常这一步不需要去干涉。除非你没有使用<code class="highlighter-rouge">xib</code>文件创建视图<br />
4、<code class="highlighter-rouge">viewDidLoad</code> 载入完成，可以进行自定义数据以及动态创建其他控件<br />
5、<code class="highlighter-rouge">viewWillAppear</code> 视图将出现在屏幕之前，马上这个视图就会被展现在屏幕上了<br />
6、<code class="highlighter-rouge">viewDidAppear</code> 视图已在屏幕上渲染完成</p>

<p>当一个视图被移除屏幕并且销毁的时候的执行顺序，这个顺序差不多和上面的相反</p>

<p>1、<code class="highlighter-rouge">viewWillDisappear</code> 视图将被从屏幕上移除之前执行<br />
2、<code class="highlighter-rouge">viewDidDisappear</code> 视图已经被从屏幕上移除，用户看不到这个视图了<br />
3、<code class="highlighter-rouge">dealloc</code> 视图被销毁，此处需要对你在init和viewDidLoad中创建的对象进行释放</p>

:ET